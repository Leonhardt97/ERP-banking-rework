generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model MasterData {
	id               Int       @id @default(autoincrement())
	access_token     String?
	refresh_token    String?
	admin_name       String?
	admin_email      String?
	admin_id         String?
	erp              String
	ftp_bool         Boolean   @default(false)
	auth_status      String?
}

model BankAccount {
	id          	String       @id
	name        	String		 @unique
	status_account String

	rules       	Rule[]
	open_postings 	OpenPosting[]
}

model TypeDescription {
	name          	String       @id
	created_at  	DateTime  @default(now())
	rules       	Rule[]
}

model RuleTag {
	id       Int      @id @default(autoincrement())
	name     String   @unique
	color	  	String
}

model Rule {
	id                    Int              @id @default(autoincrement())
	rule_type             RuleType         @default(default)
	active                Boolean          @default(true)
	notification_to       String?
	last_used             DateTime?
	created_at            DateTime?        @default(now())
	data                  Json

	related_account_name  String?
	related_account       BankAccount?     @relation(fields: [related_account_name], references: [name])

	type_description_name String?
	type_description      TypeDescription? @relation(fields: [type_description_name], references: [name])
}

enum RuleType {
	default
	exception
	temporary
}

model Run {
	id           String    @id
	booking_date DateTime
	status_code  String
	timestamp    DateTime  @default(now())
}

model OpenPosting {
	id             		String   @id
	related_account_id   String
	related_account      BankAccount     @relation(fields: [related_account_id], references: [id])
	booking_date   		DateTime
	data           		Json
}